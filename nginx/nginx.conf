events {}

http {
    
    # Define os servidores upstream (o nome do serviço e a porta)
    upstream app1_server{
        server app1:5000;
    }

    upstream app2_server{
        server app2:5001;
    }

    server{
        listen 80;

        # Rota para pagina de boas-vindas na raiz
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        # Adiciona a regra de redirecionamento para o caso de acesso SEM a barra final
        location = /app1 {
            return 301 /app1/;
        }
        # Adiciona a regra de redirecionamento para o caso de acesso SEM a barra final
        location = /app2 {
            return 301 /app2/;
        }
        
        # Rota para o APP1. Casamento de prefixo, o Nginx sabe que tudo que começa
        # com /app1/ deve ir para o upstream app1_server.
        location ^~ /app1/ {
            proxy_pass http://app1_server/; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Rota para o APP2. Casamento de prefixo. 
        # Esta é a sintaxe mais robusta para garantir que o Codespaces/Nginx roteie corretamente.
        location ^~ /app2/ { 
            proxy_pass http://app2_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
